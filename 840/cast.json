[[1.120133,{"lines":{"0":[["                                                                         ",{}]],"1":[["               .                ",{"fg":7,"bold":true}],["                                         ",{}]],"2":[["               #.               OS:",{"fg":7,"bold":true}],[" Archbang x86_64                      ",{}]],"3":[["              /;#               Hostname:",{"fg":7,"bold":true}],[" archbang                       ",{}]],"4":[["              #;##              Kernel:",{"fg":7,"bold":true}],[" 3.4.6-1-ARCH                     ",{}]],"5":[["             /###'              Uptime:",{"fg":7,"bold":true}],[" 4:35                             ",{}]],"6":[["            ;#\\   #;            Window Manager:",{"fg":7,"bold":true}],[" xmonad                   ",{}]],"7":[["           +###  .##            Packages:",{"fg":7,"bold":true}],[" 772                            ",{}]],"8":[["          +####  ;###           RAM:",{"fg":7,"bold":true}],[" 2433 MB / 3892 MB                   ",{}]],"9":[["         ######  #####;         CPU:",{"fg":7,"bold":true}],[" Intel(R) Core(TM)2 Duo CPU T6600 @ 2",{}]],"10":[[".20GHz                                                                   ",{}]],"11":[["        #######  ######         Shell:",{"fg":7,"bold":true}],[" Bash                              ",{}]],"12":[["       ######## ########        Root FS:",{"fg":7,"bold":true}],[" 6.7G / 20G (ext4)               ",{}]],"13":[["     .########;;########\\        ",{"fg":7,"bold":true}],["                                        ",{}]],"14":[["    .########;   ;#######       ",{"fg":7,"bold":true}],["                                         ",{}]],"15":[["    #########.   .########`     ",{"fg":7,"bold":true}],["                                         ",{}]],"16":[["   ######'           '######    ",{"fg":7,"bold":true}],["                                         ",{}]],"17":[["  ;####                 ####;   ",{"fg":7,"bold":true}],["                                         ",{}]],"18":[["                                                                         ",{}]],"19":[["                                                                         ",{}]],"20":[["                                                                         ",{}]],"21":[["                                                                         ",{}]],"22":[["                                                                         ",{}]],"23":[["                                                                         ",{}]],"24":[["                                                                         ",{}]],"25":[["                                                                         ",{}]],"26":[["                                                                         ",{}]],"27":[["                                                                         ",{}]],"28":[["                                                                         ",{}]],"29":[["                                                                         ",{}]],"30":[["                                                                         ",{}]],"31":[["                                                                         ",{}]],"32":[["                                                                         ",{}]],"33":[["                                                                         ",{}]],"34":[["                                                                         ",{}]],"35":[["                                                                         ",{}]],"36":[["                                                                         ",{}]],"37":[["                                                                         ",{}]],"38":[["                                                                         ",{}]],"39":[["                                                                         ",{}]]},"cursor":{"x":0,"y":18,"visible":true}}],[0.003613,{"lines":{"18":[["  ##'                     '##   ",{"fg":7,"bold":true}],["                                         ",{}]],"19":[[" #'                         `#  ",{"fg":7,"bold":true}],["                                         ",{}]],"21":[["[sakekasi@archbang bin]$                                                 ",{}]]},"cursor":{"x":25,"y":21}}],[7.365885,{"lines":{"21":[["[sakekasi@archbang bin]$ l                                               ",{}]]},"cursor":{"x":26}}],[0.039321,{"lines":{"21":[["[sakekasi@archbang bin]$ ls                                              ",{}]]},"cursor":{"x":27}}],[0.141397,{"cursor":{"x":0,"y":22}}],[0.001787,{"lines":{"22":[["asciiio",{"fg":2,"bold":true}],["  ",{}],["asciiio~",{"fg":2,"bold":true}],["                                                        ",{}]],"23":[["[sakekasi@archbang bin]$                                                 ",{}]]},"cursor":{"x":25,"y":23}}],[0.394826,{"lines":{"23":[["[sakekasi@archbang bin]$ c                                               ",{}]]},"cursor":{"x":26}}],[0.045794,{"lines":{"23":[["[sakekasi@archbang bin]$ cd                                              ",{}]]},"cursor":{"x":27}}],[0.368865,{"lines":{"24":[["[sakekasi@archbang ~]$                                                   ",{}]]},"cursor":{"x":23,"y":24}}],[0.445122,{"lines":{"24":[["[sakekasi@archbang ~]$ l                                                 ",{}]]},"cursor":{"x":24}}],[0.039692,{"lines":{"24":[["[sakekasi@archbang ~]$ ls                                                ",{}]]},"cursor":{"x":25}}],[0.117415,{"cursor":{"x":0,"y":25}}],[0.001674,{"lines":{"25":[["Desktop",{"fg":4,"bold":true}],["    ",{}],["Downloads",{"fg":4,"bold":true}],["  ",{}],["Pictures",{"fg":4,"bold":true}],["  ",{}],["Programming",{"fg":4,"bold":true}],["                              ",{}]],"26":[["Documents",{"fg":4,"bold":true}],["  ",{}],["Dropbox",{"fg":4,"bold":true}],["    pkglist   ",{}],["Source",{"fg":4,"bold":true}],["                                   ",{}]],"27":[["[sakekasi@archbang ~]$                                                   ",{}]]},"cursor":{"x":23,"y":27}}],[2.095461,{"lines":{"27":[["[sakekasi@archbang ~]$ c                                                 ",{}]]},"cursor":{"x":24}}],[0.089085,{"lines":{"27":[["[sakekasi@archbang ~]$ cd                                                ",{}]]},"cursor":{"x":25}}],[0.175317,{"cursor":{"x":26}}],[0.095194,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /                                              ",{}]]},"cursor":{"x":27}}],[0.274165,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /u                                             ",{}]]},"cursor":{"x":28}}],[0.958115,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /us                                            ",{}]]},"cursor":{"x":29}}],[0.183462,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr                                           ",{}]]},"cursor":{"x":30}}],[0.099373,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr/                                          ",{}]]},"cursor":{"x":31}}],[0.308386,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr/l                                         ",{}]]},"cursor":{"x":32}}],[0.184432,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr/lo                                        ",{}]]},"cursor":{"x":33}}],[0.152328,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr/loc                                       ",{}]]},"cursor":{"x":34}}],[0.125397,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr/loca                                      ",{}]]},"cursor":{"x":35}}],[0.087454,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr/local                                     ",{}]]},"cursor":{"x":36}}],[0.23094,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr/local/                                    ",{}]]},"cursor":{"x":37}}],[0.366643,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr/local/b                                   ",{}]]},"cursor":{"x":38}}],[0.06755700000000001,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr/local/bi                                  ",{}]]},"cursor":{"x":39}}],[0.084337,{"lines":{"27":[["[sakekasi@archbang ~]$ cd /usr/local/bin                                 ",{}]]},"cursor":{"x":40}}],[0.188997,{"lines":{"28":[["[sakekasi@archbang bin]$                                                 ",{}]]},"cursor":{"x":25,"y":28}}],[5.36428,{"lines":{"28":[["[sakekasi@archbang bin]$ v                                               ",{}]]},"cursor":{"x":26}}],[0.165408,{"lines":{"28":[["[sakekasi@archbang bin]$ vi                                              ",{}]]},"cursor":{"x":27}}],[0.140285,{"cursor":{"x":28}}],[0.128113,{"lines":{"28":[["[sakekasi@archbang bin]$ vi a                                            ",{}]]},"cursor":{"x":29}}],[0.195235,{"lines":{"28":[["[sakekasi@archbang bin]$ vi as                                           ",{}]]},"cursor":{"x":30}}],[0.236935,{"lines":{"28":[["[sakekasi@archbang bin]$ vi asc                                          ",{}]]},"cursor":{"x":31}}],[0.254518,{"lines":{"28":[["[sakekasi@archbang bin]$ vi asciiio                                      ",{}]]},"cursor":{"x":35}}],[0.575559,{"cursor":{"x":0,"y":29}}],[0.05412,{"lines":{"1":[["                                                                         ",{}]],"2":[["                                                                         ",{}]],"3":[["                                                                         ",{}]],"4":[["                                                                         ",{}]],"5":[["                                                                         ",{}]],"6":[["                                                                         ",{}]],"7":[["                                                                         ",{}]],"8":[["                                                                         ",{}]],"9":[["                                                                         ",{}]],"10":[["                                                                         ",{}]],"11":[["                                                                         ",{}]],"12":[["                                                                         ",{}]],"13":[["                                                                         ",{}]],"14":[["                                                                         ",{}]],"15":[["                                                                         ",{}]],"16":[["                                                                         ",{}]],"17":[["                                                                         ",{}]],"18":[["                                                                         ",{}]],"19":[["                                                                         ",{}]],"21":[["                                                                         ",{}]],"22":[["                                                                         ",{}]],"23":[["                                                                         ",{}]],"24":[["                                                                         ",{}]],"25":[["                                                                         ",{}]],"26":[["                                                                         ",{}]],"27":[["                                                                         ",{}]],"28":[["                                                                         ",{}]]},"cursor":{"y":39}}],[0.000733,{"lines":{"0":[["#!/usr/bin/env python2                                                   ",{}]],"2":[["import sys                                                               ",{}]],"3":[["import os                                                                ",{}]],"4":[["import pty                                                               ",{}]],"5":[["import signal                                                            ",{}]],"6":[["import tty                                                               ",{}]],"7":[["import array                                                             ",{}]],"8":[["import termios                                                           ",{}]],"9":[["import fcntl                                                             ",{}]],"10":[["import select                                                            ",{}]],"11":[["import time                                                              ",{}]],"12":[["import json                                                              ",{}]],"13":[["import getopt                                                            ",{}]],"14":[["import subprocess                                                        ",{}]],"15":[["import httplib, urllib                                                   ",{}]],"16":[["import socket                                                            ",{}]],"17":[["import glob                                                              ",{}]],"18":[["import bz2                                                               ",{}]],"19":[["import ConfigParser                                                      ",{}]],"20":[["import uuid                                                              ",{}]],"21":[["import shutil                                                            ",{}]],"22":[["import StringIO                                                          ",{}]],"24":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"25":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"28":[["class AsciiCast(object):                                                 ",{}]],"29":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"31":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"32":[[":                                                                        ",{}]],"33":[["        self.api_url = api_url                                           ",{}]],"34":[["        self.user_token = user_token                                     ",{}]],"35":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"36":[["        self.command = command                                           ",{}]],"37":[["        self.title = title                                               ",{}]],"38":[["        self.record_input = record_input                                 ",{}]],"39":[["\"asciiio\" [Read only] 472 lines, 13333 characters                        ",{}]]},"cursor":{"y":0}}],[1.611858,{"lines":{"0":[["        self.title = title                                               ",{}]],"1":[["        self.record_input = record_input                                 ",{}]],"2":[["        self.duration = None                                             ",{}]],"3":[["                                                                         ",{}]],"4":[["    def create(self):                                                    ",{}]],"5":[["        self._record()                                                   ",{}]],"6":[["        if self.confirm_upload():                                        ",{}]],"7":[["            return self._upload()                                        ",{}]],"8":[["        else:                                                            ",{}]],"9":[["            self._delete()                                               ",{}]],"10":[["                                                                         ",{}]],"11":[["    def confirm_upload(self):                                            ",{}]],"12":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"13":[["        answer = sys.stdin.readline().strip()                            ",{}]],"14":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"15":[["                                                                         ",{}]],"16":[["    def _record(self):                                                   ",{}]],"17":[["        os.makedirs(self.path)                                           ",{}]],"18":[["        self.recording_start = time.time()                               ",{}]],"19":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"20":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"21":[["        self.duration = time.time() - self.recording_start               ",{}]],"22":[["        self._save_metadata()                                            ",{}]],"24":[["    def _save_metadata(self):                                            ",{}]],"25":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"27":[["        # RFC 2822                                                       ",{}]],"28":[["        recorded_at = time.strftime(\"%a, %d %b %Y %H:%M:%S +0000\",       ",{}]],"29":[["                                    time.gmtime(                         ",{}]],"31":[["                                                                         ",{}]],"32":[["                                                                         ",{}]],"33":[["                                                                         ",{}]],"34":[["                                                                         ",{}]],"35":[["                                                                         ",{}]],"36":[["                                                                         ",{}]],"37":[["                                                                         ",{}]],"38":[["                                                                         ",{}]],"39":[["                                                                         ",{}]]},"cursor":{"x":48,"y":29}}],[6.999999999999999e-05,{"lines":{"29":[["                                    time.gmtime(self.recording_start))   ",{}]],"31":[["        command = self.command and ' '.join(self.command)                ",{}]],"32":[["        uname = self._get_cmd_output(['uname', '-srvp'])                 ",{}]],"33":[["        username = os.environ['USER']                                    ",{}]],"34":[["        shell = os.environ['SHELL']                                      ",{}]],"35":[["        term = os.environ['TERM']                                        ",{}]],"36":[["        lines = int(self._get_cmd_output(['tput', 'lines']))             ",{}]],"37":[["        columns = int(self._get_cmd_output(['tput', 'cols']))            ",{}]]},"cursor":{"x":8,"y":0}}],[0.837766,{"lines":{"0":[["        self.command = command                                           ",{}]],"1":[["        self.title = title                                               ",{}]],"2":[["        self.record_input = record_input                                 ",{}]],"3":[["        self.duration = None                                             ",{}]],"4":[["                                                                         ",{}]],"5":[["    def create(self):                                                    ",{}]],"6":[["        self._record()                                                   ",{}]],"7":[["        if self.confirm_upload():                                        ",{}]],"8":[["            return self._upload()                                        ",{}]],"9":[["        else:                                                            ",{}]],"10":[["            self._delete()                                               ",{}]],"11":[["                                                                         ",{}]],"12":[["    def confirm_upload(self):                                            ",{}]],"13":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"14":[["        answer = sys.stdin.readline().strip()                            ",{}]],"15":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"16":[["                                                                         ",{}]],"17":[["    def _record(self):                                                   ",{}]],"18":[["        os.makedirs(self.path)                                           ",{}]],"19":[["        self.recording_start = time.time()                               ",{}]],"20":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"21":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"22":[["        self.duration = time.time() - self.recording_start               ",{}]],"23":[["        self._save_metadata()                                            ",{}]],"24":[["                                                                         ",{}]],"25":[["    def _save_metadata(self):                                            ",{}]],"26":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"27":[["                                                                         ",{}]],"28":[["        # RFC 2822                                                       ",{}]],"29":[["        recorded_at = time.strftime(\"%a, %d %b %Y %H:%M:%S +0000\",       ",{}]],"30":[["                                    time.gmtime(self.recording_start))   ",{}]],"31":[["                                                                         ",{}]],"32":[["        command = self.command and ' '.join(self.command)                ",{}]],"33":[["        uname = self._get_cmd_output(['uname', '-srvp'])                 ",{}]],"34":[["        username = os.environ['USER']                                    ",{}]],"35":[["        shell = os.environ['SHELL']                                      ",{}]],"36":[["        term = os.environ['TERM']                                        ",{}]],"37":[["        lines = int(self._get_cmd_output(['tput', 'lines']))             ",{}]],"38":[["        columns = int(self._get_cmd_output(['tput', 'cols']))            ",{}]]}}],[0.659823,{"lines":{"0":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"1":[["        self.command = command                                           ",{}]],"2":[["        self.title = title                                               ",{}]],"3":[["        self.record_input = record_input                                 ",{}]],"4":[["        self.duration = None                                             ",{}]],"5":[["                                                                         ",{}]],"6":[["    def create(self):                                                    ",{}]],"7":[["        self._record()                                                   ",{}]],"8":[["        if self.confirm_upload():                                        ",{}]],"9":[["            return self._upload()                                        ",{}]],"10":[["        else:                                                            ",{}]],"11":[["            self._delete()                                               ",{}]],"12":[["                                                                         ",{}]],"13":[["    def confirm_upload(self):                                            ",{}]],"14":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"15":[["        answer = sys.stdin.readline().strip()                            ",{}]],"16":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"17":[["                                                                         ",{}]],"18":[["    def _record(self):                                                   ",{}]],"19":[["        os.makedirs(self.path)                                           ",{}]],"20":[["        self.recording_start = time.time()                               ",{}]],"21":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"22":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"23":[["        self.duration = time.time() - self.recording_start               ",{}]],"24":[["        self._save_metadata()                                            ",{}]],"25":[["                                                                         ",{}]],"26":[["    def _save_metadata(self):                                            ",{}]],"27":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"28":[["                                                                         ",{}]],"29":[["        # RFC 2822                                                       ",{}]],"30":[["        recorded_at = time.strftime(\"%a, %d %b %Y %H:%M:%S +0000\",       ",{}]],"31":[["                                    time.gmtime(self.recording_start))   ",{}]],"32":[["                                                                         ",{}]],"33":[["        command = self.command and ' '.join(self.command)                ",{}]],"34":[["        uname = self._get_cmd_output(['uname', '-srvp'])                 ",{}]],"35":[["        username = os.environ['USER']                                    ",{}]],"36":[["        shell = os.environ['SHELL']                                      ",{}]],"37":[["        term = os.environ['TERM']                                        ",{}]],"38":[["        lines = int(self._get_cmd_output(['tput', 'lines']))             ",{}]]}}],[0.039424,{"lines":{"0":[["        self.user_token = user_token                                     ",{}]],"1":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"2":[["        self.command = command                                           ",{}]],"3":[["        self.title = title                                               ",{}]],"4":[["        self.record_input = record_input                                 ",{}]],"5":[["        self.duration = None                                             ",{}]],"6":[["                                                                         ",{}]],"7":[["    def create(self):                                                    ",{}]],"8":[["        self._record()                                                   ",{}]],"9":[["        if self.confirm_upload():                                        ",{}]],"10":[["            return self._upload()                                        ",{}]],"11":[["        else:                                                            ",{}]],"12":[["            self._delete()                                               ",{}]],"13":[["                                                                         ",{}]],"14":[["    def confirm_upload(self):                                            ",{}]],"15":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"16":[["        answer = sys.stdin.readline().strip()                            ",{}]],"17":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"18":[["                                                                         ",{}]],"19":[["    def _record(self):                                                   ",{}]],"20":[["        os.makedirs(self.path)                                           ",{}]],"21":[["        self.recording_start = time.time()                               ",{}]],"22":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"23":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"24":[["        self.duration = time.time() - self.recording_start               ",{}]],"25":[["        self._save_metadata()                                            ",{}]],"26":[["                                                                         ",{}]],"27":[["    def _save_metadata(self):                                            ",{}]],"28":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"29":[["                                                                         ",{}]],"30":[["        # RFC 2822                                                       ",{}]],"31":[["        recorded_at = time.strftime(\"%a, %d %b %Y %H:%M:%S +0000\",       ",{}]],"32":[["                                    time.gmtime(self.recording_start))   ",{}]],"33":[["                                                                         ",{}]],"34":[["        command = self.command and ' '.join(self.command)                ",{}]],"35":[["        uname = self._get_cmd_output(['uname', '-srvp'])                 ",{}]],"36":[["        username = os.environ['USER']                                    ",{}]],"37":[["        shell = os.environ['SHELL']                                      ",{}]],"38":[["        term = os.environ['TERM']                                        ",{}]]}}],[0.040897,{"lines":{"0":[["        self.api_url = api_url                                           ",{}]],"1":[["        self.user_token = user_token                                     ",{}]],"2":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"3":[["        self.command = command                                           ",{}]],"4":[["        self.title = title                                               ",{}]],"5":[["        self.record_input = record_input                                 ",{}]],"6":[["        self.duration = None                                             ",{}]],"7":[["                                                                         ",{}]],"8":[["    def create(self):                                                    ",{}]],"9":[["        self._record()                                                   ",{}]],"10":[["        if self.confirm_upload():                                        ",{}]],"11":[["            return self._upload()                                        ",{}]],"12":[["        else:                                                            ",{}]],"13":[["            self._delete()                                               ",{}]],"14":[["                                                                         ",{}]],"15":[["    def confirm_upload(self):                                            ",{}]],"16":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"17":[["        answer = sys.stdin.readline().strip()                            ",{}]],"18":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"19":[["                                                                         ",{}]],"20":[["    def _record(self):                                                   ",{}]],"21":[["        os.makedirs(self.path)                                           ",{}]],"22":[["        self.recording_start = time.time()                               ",{}]],"23":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"24":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"25":[["        self.duration = time.time() - self.recording_start               ",{}]],"26":[["        self._save_metadata()                                            ",{}]],"27":[["                                                                         ",{}]],"28":[["    def _save_metadata(self):                                            ",{}]],"29":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"30":[["                                                                         ",{}]],"31":[["        # RFC 2822                                                       ",{}]],"32":[["        recorded_at = time.strftime(\"%a, %d %b %Y %H:%M:%S +0000\",       ",{}]],"33":[["                                    time.gmtime(self.recording_start))   ",{}]],"34":[["                                                                         ",{}]],"35":[["        command = self.command and ' '.join(self.command)                ",{}]],"36":[["        uname = self._get_cmd_output(['uname', '-srvp'])                 ",{}]],"37":[["        username = os.environ['USER']                                    ",{}]],"38":[["        shell = os.environ['SHELL']                                      ",{}]]}}],[0.040393,{"lines":{"0":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"1":[[":                                                                        ",{}]],"2":[["        self.api_url = api_url                                           ",{}]],"3":[["        self.user_token = user_token                                     ",{}]],"4":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"5":[["        self.command = command                                           ",{}]],"6":[["        self.title = title                                               ",{}]],"7":[["        self.record_input = record_input                                 ",{}]],"8":[["        self.duration = None                                             ",{}]],"9":[["                                                                         ",{}]],"10":[["    def create(self):                                                    ",{}]],"11":[["        self._record()                                                   ",{}]],"12":[["        if self.confirm_upload():                                        ",{}]],"13":[["            return self._upload()                                        ",{}]],"14":[["        else:                                                            ",{}]],"15":[["            self._delete()                                               ",{}]],"16":[["                                                                         ",{}]],"17":[["    def confirm_upload(self):                                            ",{}]],"18":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"19":[["        answer = sys.stdin.readline().strip()                            ",{}]],"20":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"21":[["                                                                         ",{}]],"22":[["    def _record(self):                                                   ",{}]],"23":[["        os.makedirs(self.path)                                           ",{}]],"24":[["        self.recording_start = time.time()                               ",{}]],"25":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"26":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"27":[["        self.duration = time.time() - self.recording_start               ",{}]],"28":[["        self._save_metadata()                                            ",{}]],"29":[["                                                                         ",{}]],"30":[["    def _save_metadata(self):                                            ",{}]],"31":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"32":[["                                                                         ",{}]],"33":[["        # RFC 2822                                                       ",{}]],"34":[["        recorded_at = time.strftime(\"%a, %d %b %Y %H:%M:%S +0000\",       ",{}]],"35":[["                                    time.gmtime(self.recording_start))   ",{}]],"36":[["                                                                         ",{}]],"37":[["        command = self.command and ' '.join(self.command)                ",{}]],"38":[["        uname = self._get_cmd_output(['uname', '-srvp'])                 ",{}]]}}],[0.040193,{"lines":{"0":[["                                                                         ",{}]],"1":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"2":[[":                                                                        ",{}]],"3":[["        self.api_url = api_url                                           ",{}]],"4":[["        self.user_token = user_token                                     ",{}]],"5":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"6":[["        self.command = command                                           ",{}]],"7":[["        self.title = title                                               ",{}]],"8":[["        self.record_input = record_input                                 ",{}]],"9":[["        self.duration = None                                             ",{}]],"10":[["                                                                         ",{}]],"11":[["    def create(self):                                                    ",{}]],"12":[["        self._record()                                                   ",{}]],"13":[["        if self.confirm_upload():                                        ",{}]],"14":[["            return self._upload()                                        ",{}]],"15":[["        else:                                                            ",{}]],"16":[["            self._delete()                                               ",{}]],"17":[["                                                                         ",{}]],"18":[["    def confirm_upload(self):                                            ",{}]],"19":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"20":[["        answer = sys.stdin.readline().strip()                            ",{}]],"21":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"22":[["                                                                         ",{}]],"23":[["    def _record(self):                                                   ",{}]],"24":[["        os.makedirs(self.path)                                           ",{}]],"25":[["        self.recording_start = time.time()                               ",{}]],"26":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"27":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"28":[["        self.duration = time.time() - self.recording_start               ",{}]],"29":[["        self._save_metadata()                                            ",{}]],"30":[["                                                                         ",{}]],"31":[["    def _save_metadata(self):                                            ",{}]],"32":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"33":[["                                                                         ",{}]],"34":[["        # RFC 2822                                                       ",{}]],"35":[["        recorded_at = time.strftime(\"%a, %d %b %Y %H:%M:%S +0000\",       ",{}]],"36":[["                                    time.gmtime(self.recording_start))   ",{}]],"37":[["                                                                         ",{}]],"38":[["        command = self.command and ' '.join(self.command)                ",{}]]},"cursor":{"x":0}}],[0.039634,{"lines":{"0":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"1":[["                                                                         ",{}]],"2":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"3":[[":                                                                        ",{}]],"4":[["        self.api_url = api_url                                           ",{}]],"5":[["        self.user_token = user_token                                     ",{}]],"6":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"7":[["        self.command = command                                           ",{}]],"8":[["        self.title = title                                               ",{}]],"9":[["        self.record_input = record_input                                 ",{}]],"10":[["        self.duration = None                                             ",{}]],"11":[["                                                                         ",{}]],"12":[["    def create(self):                                                    ",{}]],"13":[["        self._record()                                                   ",{}]],"14":[["        if self.confirm_upload():                                        ",{}]],"15":[["            return self._upload()                                        ",{}]],"16":[["        else:                                                            ",{}]],"17":[["            self._delete()                                               ",{}]],"18":[["                                                                         ",{}]],"19":[["    def confirm_upload(self):                                            ",{}]],"20":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"21":[["        answer = sys.stdin.readline().strip()                            ",{}]],"22":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"23":[["                                                                         ",{}]],"24":[["    def _record(self):                                                   ",{}]],"25":[["        os.makedirs(self.path)                                           ",{}]],"26":[["        self.recording_start = time.time()                               ",{}]],"27":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"28":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"29":[["        self.duration = time.time() - self.recording_start               ",{}]],"30":[["        self._save_metadata()                                            ",{}]],"31":[["                                                                         ",{}]],"32":[["    def _save_metadata(self):                                            ",{}]],"33":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"34":[["                                                                         ",{}]],"35":[["        # RFC 2822                                                       ",{}]],"36":[["        recorded_at = time.strftime(\"%a, %d %b %Y %H:%M:%S +0000\",       ",{}]],"37":[["                                    time.gmtime(self.recording_start))   ",{}]],"38":[["                                                                         ",{}]]},"cursor":{"x":8}}],[0.040361,{"lines":{"0":[["class AsciiCast(object):                                                 ",{}]],"1":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"2":[["                                                                         ",{}]],"3":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"4":[[":                                                                        ",{}]],"5":[["        self.api_url = api_url                                           ",{}]],"6":[["        self.user_token = user_token                                     ",{}]],"7":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"8":[["        self.command = command                                           ",{}]],"9":[["        self.title = title                                               ",{}]],"10":[["        self.record_input = record_input                                 ",{}]],"11":[["        self.duration = None                                             ",{}]],"12":[["                                                                         ",{}]],"13":[["    def create(self):                                                    ",{}]],"14":[["        self._record()                                                   ",{}]],"15":[["        if self.confirm_upload():                                        ",{}]],"16":[["            return self._upload()                                        ",{}]],"17":[["        else:                                                            ",{}]],"18":[["            self._delete()                                               ",{}]],"19":[["                                                                         ",{}]],"20":[["    def confirm_upload(self):                                            ",{}]],"21":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"22":[["        answer = sys.stdin.readline().strip()                            ",{}]],"23":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"24":[["                                                                         ",{}]],"25":[["    def _record(self):                                                   ",{}]],"26":[["        os.makedirs(self.path)                                           ",{}]],"27":[["        self.recording_start = time.time()                               ",{}]],"28":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"29":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"30":[["        self.duration = time.time() - self.recording_start               ",{}]],"31":[["        self._save_metadata()                                            ",{}]],"32":[["                                                                         ",{}]],"33":[["    def _save_metadata(self):                                            ",{}]],"34":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"35":[["                                                                         ",{}]],"36":[["        # RFC 2822                                                       ",{}]],"37":[["        recorded_at = time.strftime(\"%a, %d %b %Y %H:%M:%S +0000\",       ",{}]],"38":[["                                    time.gmtime(self.recording_start))   ",{}]]}}],[0.040335,{"lines":{"0":[["                                                                         ",{}]],"1":[["class AsciiCast(object):                                                 ",{}]],"2":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"3":[["                                                                         ",{}]],"4":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"5":[[":                                                                        ",{}]],"6":[["        self.api_url = api_url                                           ",{}]],"7":[["        self.user_token = user_token                                     ",{}]],"8":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"9":[["        self.command = command                                           ",{}]],"10":[["        self.title = title                                               ",{}]],"11":[["        self.record_input = record_input                                 ",{}]],"12":[["        self.duration = None                                             ",{}]],"13":[["                                                                         ",{}]],"14":[["    def create(self):                                                    ",{}]],"15":[["        self._record()                                                   ",{}]],"16":[["        if self.confirm_upload():                                        ",{}]],"17":[["            return self._upload()                                        ",{}]],"18":[["        else:                                                            ",{}]],"19":[["            self._delete()                                               ",{}]],"20":[["                                                                         ",{}]],"21":[["    def confirm_upload(self):                                            ",{}]],"22":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"23":[["        answer = sys.stdin.readline().strip()                            ",{}]],"24":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"25":[["                                                                         ",{}]],"26":[["    def _record(self):                                                   ",{}]],"27":[["        os.makedirs(self.path)                                           ",{}]],"28":[["        self.recording_start = time.time()                               ",{}]],"29":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"30":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"31":[["        self.duration = time.time() - self.recording_start               ",{}]],"32":[["        self._save_metadata()                                            ",{}]],"33":[["                                                                         ",{}]],"34":[["    def _save_metadata(self):                                            ",{}]],"35":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"36":[["                                                                         ",{}]],"37":[["        # RFC 2822                                                       ",{}]],"38":[["        recorded_at = time.strftime(\"%a, %d %b %Y %H:%M:%S +0000\",       ",{}]]},"cursor":{"x":0}}],[0.039296,{"lines":{"1":[["                                                                         ",{}]],"2":[["class AsciiCast(object):                                                 ",{}]],"3":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"4":[["                                                                         ",{}]],"5":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"6":[[":                                                                        ",{}]],"7":[["        self.api_url = api_url                                           ",{}]],"8":[["        self.user_token = user_token                                     ",{}]],"9":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"10":[["        self.command = command                                           ",{}]],"11":[["        self.title = title                                               ",{}]],"12":[["        self.record_input = record_input                                 ",{}]],"13":[["        self.duration = None                                             ",{}]],"14":[["                                                                         ",{}]],"15":[["    def create(self):                                                    ",{}]],"16":[["        self._record()                                                   ",{}]],"17":[["        if self.confirm_upload():                                        ",{}]],"18":[["            return self._upload()                                        ",{}]],"19":[["        else:                                                            ",{}]],"20":[["            self._delete()                                               ",{}]],"21":[["                                                                         ",{}]],"22":[["    def confirm_upload(self):                                            ",{}]],"23":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"24":[["        answer = sys.stdin.readline().strip()                            ",{}]],"25":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"26":[["                                                                         ",{}]],"27":[["    def _record(self):                                                   ",{}]],"28":[["        os.makedirs(self.path)                                           ",{}]],"29":[["        self.recording_start = time.time()                               ",{}]],"30":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"31":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"32":[["        self.duration = time.time() - self.recording_start               ",{}]],"33":[["        self._save_metadata()                                            ",{}]],"34":[["                                                                         ",{}]],"35":[["    def _save_metadata(self):                                            ",{}]],"36":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"37":[["                                                                         ",{}]],"38":[["        # RFC 2822                                                       ",{}]]}}],[0.040411,{"lines":{"0":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"2":[["                                                                         ",{}]],"3":[["class AsciiCast(object):                                                 ",{}]],"4":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"5":[["                                                                         ",{}]],"6":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"7":[[":                                                                        ",{}]],"8":[["        self.api_url = api_url                                           ",{}]],"9":[["        self.user_token = user_token                                     ",{}]],"10":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"11":[["        self.command = command                                           ",{}]],"12":[["        self.title = title                                               ",{}]],"13":[["        self.record_input = record_input                                 ",{}]],"14":[["        self.duration = None                                             ",{}]],"15":[["                                                                         ",{}]],"16":[["    def create(self):                                                    ",{}]],"17":[["        self._record()                                                   ",{}]],"18":[["        if self.confirm_upload():                                        ",{}]],"19":[["            return self._upload()                                        ",{}]],"20":[["        else:                                                            ",{}]],"21":[["            self._delete()                                               ",{}]],"22":[["                                                                         ",{}]],"23":[["    def confirm_upload(self):                                            ",{}]],"24":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"25":[["        answer = sys.stdin.readline().strip()                            ",{}]],"26":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"27":[["                                                                         ",{}]],"28":[["    def _record(self):                                                   ",{}]],"29":[["        os.makedirs(self.path)                                           ",{}]],"30":[["        self.recording_start = time.time()                               ",{}]],"31":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"32":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"33":[["        self.duration = time.time() - self.recording_start               ",{}]],"34":[["        self._save_metadata()                                            ",{}]],"35":[["                                                                         ",{}]],"36":[["    def _save_metadata(self):                                            ",{}]],"37":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]],"38":[["                                                                         ",{}]]},"cursor":{"x":8}}],[0.040528,{"lines":{"0":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"1":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"3":[["                                                                         ",{}]],"4":[["class AsciiCast(object):                                                 ",{}]],"5":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"6":[["                                                                         ",{}]],"7":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"8":[[":                                                                        ",{}]],"9":[["        self.api_url = api_url                                           ",{}]],"10":[["        self.user_token = user_token                                     ",{}]],"11":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"12":[["        self.command = command                                           ",{}]],"13":[["        self.title = title                                               ",{}]],"14":[["        self.record_input = record_input                                 ",{}]],"15":[["        self.duration = None                                             ",{}]],"16":[["                                                                         ",{}]],"17":[["    def create(self):                                                    ",{}]],"18":[["        self._record()                                                   ",{}]],"19":[["        if self.confirm_upload():                                        ",{}]],"20":[["            return self._upload()                                        ",{}]],"21":[["        else:                                                            ",{}]],"22":[["            self._delete()                                               ",{}]],"23":[["                                                                         ",{}]],"24":[["    def confirm_upload(self):                                            ",{}]],"25":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"26":[["        answer = sys.stdin.readline().strip()                            ",{}]],"27":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"28":[["                                                                         ",{}]],"29":[["    def _record(self):                                                   ",{}]],"30":[["        os.makedirs(self.path)                                           ",{}]],"31":[["        self.recording_start = time.time()                               ",{}]],"32":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"33":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"34":[["        self.duration = time.time() - self.recording_start               ",{}]],"35":[["        self._save_metadata()                                            ",{}]],"36":[["                                                                         ",{}]],"37":[["    def _save_metadata(self):                                            ",{}]],"38":[["        info_file = open(self.path + '/meta.json', 'wb')                 ",{}]]}}],[0.040288,{"lines":{"0":[["                                                                         ",{}]],"1":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"2":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"4":[["                                                                         ",{}]],"5":[["class AsciiCast(object):                                                 ",{}]],"6":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"7":[["                                                                         ",{}]],"8":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"9":[[":                                                                        ",{}]],"10":[["        self.api_url = api_url                                           ",{}]],"11":[["        self.user_token = user_token                                     ",{}]],"12":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"13":[["        self.command = command                                           ",{}]],"14":[["        self.title = title                                               ",{}]],"15":[["        self.record_input = record_input                                 ",{}]],"16":[["        self.duration = None                                             ",{}]],"17":[["                                                                         ",{}]],"18":[["    def create(self):                                                    ",{}]],"19":[["        self._record()                                                   ",{}]],"20":[["        if self.confirm_upload():                                        ",{}]],"21":[["            return self._upload()                                        ",{}]],"22":[["        else:                                                            ",{}]],"23":[["            self._delete()                                               ",{}]],"24":[["                                                                         ",{}]],"25":[["    def confirm_upload(self):                                            ",{}]],"26":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"27":[["        answer = sys.stdin.readline().strip()                            ",{}]],"28":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"29":[["                                                                         ",{}]],"30":[["    def _record(self):                                                   ",{}]],"31":[["        os.makedirs(self.path)                                           ",{}]],"32":[["        self.recording_start = time.time()                               ",{}]],"33":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"34":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"35":[["        self.duration = time.time() - self.recording_start               ",{}]],"36":[["        self._save_metadata()                                            ",{}]],"37":[["                                                                         ",{}]],"38":[["    def _save_metadata(self):                                            ",{}]]},"cursor":{"x":0}}],[0.040762,{"lines":{"0":[["import StringIO                                                          ",{}]],"1":[["                                                                         ",{}]],"2":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"3":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"5":[["                                                                         ",{}]],"6":[["class AsciiCast(object):                                                 ",{}]],"7":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"8":[["                                                                         ",{}]],"9":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"10":[[":                                                                        ",{}]],"11":[["        self.api_url = api_url                                           ",{}]],"12":[["        self.user_token = user_token                                     ",{}]],"13":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"14":[["        self.command = command                                           ",{}]],"15":[["        self.title = title                                               ",{}]],"16":[["        self.record_input = record_input                                 ",{}]],"17":[["        self.duration = None                                             ",{}]],"18":[["                                                                         ",{}]],"19":[["    def create(self):                                                    ",{}]],"20":[["        self._record()                                                   ",{}]],"21":[["        if self.confirm_upload():                                        ",{}]],"22":[["            return self._upload()                                        ",{}]],"23":[["        else:                                                            ",{}]],"24":[["            self._delete()                                               ",{}]],"25":[["                                                                         ",{}]],"26":[["    def confirm_upload(self):                                            ",{}]],"27":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"28":[["        answer = sys.stdin.readline().strip()                            ",{}]],"29":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"30":[["                                                                         ",{}]],"31":[["    def _record(self):                                                   ",{}]],"32":[["        os.makedirs(self.path)                                           ",{}]],"33":[["        self.recording_start = time.time()                               ",{}]],"34":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"35":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"36":[["        self.duration = time.time() - self.recording_start               ",{}]],"37":[["        self._save_metadata()                                            ",{}]],"38":[["                                                                         ",{}]]},"cursor":{"x":8}}],[0.0402,{"lines":{"0":[["import shutil                                                            ",{}]],"1":[["import StringIO                                                          ",{}]],"2":[["                                                                         ",{}]],"3":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"4":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"6":[["                                                                         ",{}]],"7":[["class AsciiCast(object):                                                 ",{}]],"8":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"9":[["                                                                         ",{}]],"10":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"11":[[":                                                                        ",{}]],"12":[["        self.api_url = api_url                                           ",{}]],"13":[["        self.user_token = user_token                                     ",{}]],"14":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"15":[["        self.command = command                                           ",{}]],"16":[["        self.title = title                                               ",{}]],"17":[["        self.record_input = record_input                                 ",{}]],"18":[["        self.duration = None                                             ",{}]],"19":[["                                                                         ",{}]],"20":[["    def create(self):                                                    ",{}]],"21":[["        self._record()                                                   ",{}]],"22":[["        if self.confirm_upload():                                        ",{}]],"23":[["            return self._upload()                                        ",{}]],"24":[["        else:                                                            ",{}]],"25":[["            self._delete()                                               ",{}]],"26":[["                                                                         ",{}]],"27":[["    def confirm_upload(self):                                            ",{}]],"28":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"29":[["        answer = sys.stdin.readline().strip()                            ",{}]],"30":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"31":[["                                                                         ",{}]],"32":[["    def _record(self):                                                   ",{}]],"33":[["        os.makedirs(self.path)                                           ",{}]],"34":[["        self.recording_start = time.time()                               ",{}]],"35":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"36":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"37":[["        self.duration = time.time() - self.recording_start               ",{}]],"38":[["        self._save_metadata()                                            ",{}]]}}],[0.040093,{"lines":{"0":[["import uuid                                                              ",{}]],"1":[["import shutil                                                            ",{}]],"2":[["import StringIO                                                          ",{}]],"3":[["                                                                         ",{}]],"4":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"5":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"7":[["                                                                         ",{}]],"8":[["class AsciiCast(object):                                                 ",{}]],"9":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"10":[["                                                                         ",{}]],"11":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"12":[[":                                                                        ",{}]],"13":[["        self.api_url = api_url                                           ",{}]],"14":[["        self.user_token = user_token                                     ",{}]],"15":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"16":[["        self.command = command                                           ",{}]],"17":[["        self.title = title                                               ",{}]],"18":[["        self.record_input = record_input                                 ",{}]],"19":[["        self.duration = None                                             ",{}]],"20":[["                                                                         ",{}]],"21":[["    def create(self):                                                    ",{}]],"22":[["        self._record()                                                   ",{}]],"23":[["        if self.confirm_upload():                                        ",{}]],"24":[["            return self._upload()                                        ",{}]],"25":[["        else:                                                            ",{}]],"26":[["            self._delete()                                               ",{}]],"27":[["                                                                         ",{}]],"28":[["    def confirm_upload(self):                                            ",{}]],"29":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"30":[["        answer = sys.stdin.readline().strip()                            ",{}]],"31":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"32":[["                                                                         ",{}]],"33":[["    def _record(self):                                                   ",{}]],"34":[["        os.makedirs(self.path)                                           ",{}]],"35":[["        self.recording_start = time.time()                               ",{}]],"36":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"37":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]],"38":[["        self.duration = time.time() - self.recording_start               ",{}]]}}],[0.039834,{"lines":{"0":[["import ConfigParser                                                      ",{}]],"1":[["import uuid                                                              ",{}]],"2":[["import shutil                                                            ",{}]],"3":[["import StringIO                                                          ",{}]],"4":[["                                                                         ",{}]],"5":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"6":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"8":[["                                                                         ",{}]],"9":[["class AsciiCast(object):                                                 ",{}]],"10":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"11":[["                                                                         ",{}]],"12":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"13":[[":                                                                        ",{}]],"14":[["        self.api_url = api_url                                           ",{}]],"15":[["        self.user_token = user_token                                     ",{}]],"16":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"17":[["        self.command = command                                           ",{}]],"18":[["        self.title = title                                               ",{}]],"19":[["        self.record_input = record_input                                 ",{}]],"20":[["        self.duration = None                                             ",{}]],"21":[["                                                                         ",{}]],"22":[["    def create(self):                                                    ",{}]],"23":[["        self._record()                                                   ",{}]],"24":[["        if self.confirm_upload():                                        ",{}]],"25":[["            return self._upload()                                        ",{}]],"26":[["        else:                                                            ",{}]],"27":[["            self._delete()                                               ",{}]],"28":[["                                                                         ",{}]],"29":[["    def confirm_upload(self):                                            ",{}]],"30":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"31":[["        answer = sys.stdin.readline().strip()                            ",{}]],"32":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"33":[["                                                                         ",{}]],"34":[["    def _record(self):                                                   ",{}]],"35":[["        os.makedirs(self.path)                                           ",{}]],"36":[["        self.recording_start = time.time()                               ",{}]],"37":[["        command = self.command or os.environ['SHELL'].split()            ",{}]],"38":[["        PtyRecorder(self.path, command, self.record_input).run()         ",{}]]}}],[0.040185,{"lines":{"0":[["import bz2                                                               ",{}]],"1":[["import ConfigParser                                                      ",{}]],"2":[["import uuid                                                              ",{}]],"3":[["import shutil                                                            ",{}]],"4":[["import StringIO                                                          ",{}]],"5":[["                                                                         ",{}]],"6":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"7":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"9":[["                                                                         ",{}]],"10":[["class AsciiCast(object):                                                 ",{}]],"11":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"12":[["                                                                         ",{}]],"13":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"14":[[":                                                                        ",{}]],"15":[["        self.api_url = api_url                                           ",{}]],"16":[["        self.user_token = user_token                                     ",{}]],"17":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"18":[["        self.command = command                                           ",{}]],"19":[["        self.title = title                                               ",{}]],"20":[["        self.record_input = record_input                                 ",{}]],"21":[["        self.duration = None                                             ",{}]],"22":[["                                                                         ",{}]],"23":[["    def create(self):                                                    ",{}]],"24":[["        self._record()                                                   ",{}]],"25":[["        if self.confirm_upload():                                        ",{}]],"26":[["            return self._upload()                                        ",{}]],"27":[["        else:                                                            ",{}]],"28":[["            self._delete()                                               ",{}]],"29":[["                                                                         ",{}]],"30":[["    def confirm_upload(self):                                            ",{}]],"31":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"32":[["        answer = sys.stdin.readline().strip()                            ",{}]],"33":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"34":[["                                                                         ",{}]],"35":[["    def _record(self):                                                   ",{}]],"36":[["        os.makedirs(self.path)                                           ",{}]],"37":[["        self.recording_start = time.time()                               ",{}]],"38":[["        command = self.command or os.environ['SHELL'].split()            ",{}]]}}],[0.040425,{"lines":{"0":[["import glob                                                              ",{}]],"1":[["import bz2                                                               ",{}]],"2":[["import ConfigParser                                                      ",{}]],"3":[["import uuid                                                              ",{}]],"4":[["import shutil                                                            ",{}]],"5":[["import StringIO                                                          ",{}]],"6":[["                                                                         ",{}]],"7":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"8":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"10":[["                                                                         ",{}]],"11":[["class AsciiCast(object):                                                 ",{}]],"12":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"13":[["                                                                         ",{}]],"14":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"15":[[":                                                                        ",{}]],"16":[["        self.api_url = api_url                                           ",{}]],"17":[["        self.user_token = user_token                                     ",{}]],"18":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"19":[["        self.command = command                                           ",{}]],"20":[["        self.title = title                                               ",{}]],"21":[["        self.record_input = record_input                                 ",{}]],"22":[["        self.duration = None                                             ",{}]],"23":[["                                                                         ",{}]],"24":[["    def create(self):                                                    ",{}]],"25":[["        self._record()                                                   ",{}]],"26":[["        if self.confirm_upload():                                        ",{}]],"27":[["            return self._upload()                                        ",{}]],"28":[["        else:                                                            ",{}]],"29":[["            self._delete()                                               ",{}]],"30":[["                                                                         ",{}]],"31":[["    def confirm_upload(self):                                            ",{}]],"32":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"33":[["        answer = sys.stdin.readline().strip()                            ",{}]],"34":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"35":[["                                                                         ",{}]],"36":[["    def _record(self):                                                   ",{}]],"37":[["        os.makedirs(self.path)                                           ",{}]],"38":[["        self.recording_start = time.time()                               ",{}]]}}],[0.040692,{"lines":{"0":[["import socket                                                            ",{}]],"1":[["import glob                                                              ",{}]],"2":[["import bz2                                                               ",{}]],"3":[["import ConfigParser                                                      ",{}]],"4":[["import uuid                                                              ",{}]],"5":[["import shutil                                                            ",{}]],"6":[["import StringIO                                                          ",{}]],"7":[["                                                                         ",{}]],"8":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"9":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"11":[["                                                                         ",{}]],"12":[["class AsciiCast(object):                                                 ",{}]],"13":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"14":[["                                                                         ",{}]],"15":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"16":[[":                                                                        ",{}]],"17":[["        self.api_url = api_url                                           ",{}]],"18":[["        self.user_token = user_token                                     ",{}]],"19":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"20":[["        self.command = command                                           ",{}]],"21":[["        self.title = title                                               ",{}]],"22":[["        self.record_input = record_input                                 ",{}]],"23":[["        self.duration = None                                             ",{}]],"24":[["                                                                         ",{}]],"25":[["    def create(self):                                                    ",{}]],"26":[["        self._record()                                                   ",{}]],"27":[["        if self.confirm_upload():                                        ",{}]],"28":[["            return self._upload()                                        ",{}]],"29":[["        else:                                                            ",{}]],"30":[["            self._delete()                                               ",{}]],"31":[["                                                                         ",{}]],"32":[["    def confirm_upload(self):                                            ",{}]],"33":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"34":[["        answer = sys.stdin.readline().strip()                            ",{}]],"35":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"36":[["                                                                         ",{}]],"37":[["    def _record(self):                                                   ",{}]],"38":[["        os.makedirs(self.path)                                           ",{}]]}}],[0.040362,{"lines":{"0":[["import httplib, urllib                                                   ",{}]],"1":[["import socket                                                            ",{}]],"2":[["import glob                                                              ",{}]],"3":[["import bz2                                                               ",{}]],"4":[["import ConfigParser                                                      ",{}]],"5":[["import uuid                                                              ",{}]],"6":[["import shutil                                                            ",{}]],"7":[["import StringIO                                                          ",{}]],"8":[["                                                                         ",{}]],"9":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"10":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"12":[["                                                                         ",{}]],"13":[["class AsciiCast(object):                                                 ",{}]],"14":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"15":[["                                                                         ",{}]],"16":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"17":[[":                                                                        ",{}]],"18":[["        self.api_url = api_url                                           ",{}]],"19":[["        self.user_token = user_token                                     ",{}]],"20":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"21":[["        self.command = command                                           ",{}]],"22":[["        self.title = title                                               ",{}]],"23":[["        self.record_input = record_input                                 ",{}]],"24":[["        self.duration = None                                             ",{}]],"25":[["                                                                         ",{}]],"26":[["    def create(self):                                                    ",{}]],"27":[["        self._record()                                                   ",{}]],"28":[["        if self.confirm_upload():                                        ",{}]],"29":[["            return self._upload()                                        ",{}]],"30":[["        else:                                                            ",{}]],"31":[["            self._delete()                                               ",{}]],"32":[["                                                                         ",{}]],"33":[["    def confirm_upload(self):                                            ",{}]],"34":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"35":[["        answer = sys.stdin.readline().strip()                            ",{}]],"36":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"37":[["                                                                         ",{}]],"38":[["    def _record(self):                                                   ",{}]]}}],[0.040205,{"lines":{"0":[["import subprocess                                                        ",{}]],"1":[["import httplib, urllib                                                   ",{}]],"2":[["import socket                                                            ",{}]],"3":[["import glob                                                              ",{}]],"4":[["import bz2                                                               ",{}]],"5":[["import ConfigParser                                                      ",{}]],"6":[["import uuid                                                              ",{}]],"7":[["import shutil                                                            ",{}]],"8":[["import StringIO                                                          ",{}]],"9":[["                                                                         ",{}]],"10":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"11":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"13":[["                                                                         ",{}]],"14":[["class AsciiCast(object):                                                 ",{}]],"15":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"16":[["                                                                         ",{}]],"17":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"18":[[":                                                                        ",{}]],"19":[["        self.api_url = api_url                                           ",{}]],"20":[["        self.user_token = user_token                                     ",{}]],"21":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"22":[["        self.command = command                                           ",{}]],"23":[["        self.title = title                                               ",{}]],"24":[["        self.record_input = record_input                                 ",{}]],"25":[["        self.duration = None                                             ",{}]],"26":[["                                                                         ",{}]],"27":[["    def create(self):                                                    ",{}]],"28":[["        self._record()                                                   ",{}]],"29":[["        if self.confirm_upload():                                        ",{}]],"30":[["            return self._upload()                                        ",{}]],"31":[["        else:                                                            ",{}]],"32":[["            self._delete()                                               ",{}]],"33":[["                                                                         ",{}]],"34":[["    def confirm_upload(self):                                            ",{}]],"35":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"36":[["        answer = sys.stdin.readline().strip()                            ",{}]],"37":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]],"38":[["                                                                         ",{}]]}}],[0.040108,{"lines":{"0":[["import getopt                                                            ",{}]],"1":[["import subprocess                                                        ",{}]],"2":[["import httplib, urllib                                                   ",{}]],"3":[["import socket                                                            ",{}]],"4":[["import glob                                                              ",{}]],"5":[["import bz2                                                               ",{}]],"6":[["import ConfigParser                                                      ",{}]],"7":[["import uuid                                                              ",{}]],"8":[["import shutil                                                            ",{}]],"9":[["import StringIO                                                          ",{}]],"10":[["                                                                         ",{}]],"11":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"12":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"14":[["                                                                         ",{}]],"15":[["class AsciiCast(object):                                                 ",{}]],"16":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"17":[["                                                                         ",{}]],"18":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"19":[[":                                                                        ",{}]],"20":[["        self.api_url = api_url                                           ",{}]],"21":[["        self.user_token = user_token                                     ",{}]],"22":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"23":[["        self.command = command                                           ",{}]],"24":[["        self.title = title                                               ",{}]],"25":[["        self.record_input = record_input                                 ",{}]],"26":[["        self.duration = None                                             ",{}]],"27":[["                                                                         ",{}]],"28":[["    def create(self):                                                    ",{}]],"29":[["        self._record()                                                   ",{}]],"30":[["        if self.confirm_upload():                                        ",{}]],"31":[["            return self._upload()                                        ",{}]],"32":[["        else:                                                            ",{}]],"33":[["            self._delete()                                               ",{}]],"34":[["                                                                         ",{}]],"35":[["    def confirm_upload(self):                                            ",{}]],"36":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"37":[["        answer = sys.stdin.readline().strip()                            ",{}]],"38":[["        return answer == 'y' or answer == 'Y' or answer == ''            ",{}]]}}],[0.040337,{"lines":{"0":[["import json                                                              ",{}]],"1":[["import getopt                                                            ",{}]],"2":[["import subprocess                                                        ",{}]],"3":[["import httplib, urllib                                                   ",{}]],"4":[["import socket                                                            ",{}]],"5":[["import glob                                                              ",{}]],"6":[["import bz2                                                               ",{}]],"7":[["import ConfigParser                                                      ",{}]],"8":[["import uuid                                                              ",{}]],"9":[["import shutil                                                            ",{}]],"10":[["import StringIO                                                          ",{}]],"11":[["                                                                         ",{}]],"12":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"13":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"15":[["                                                                         ",{}]],"16":[["class AsciiCast(object):                                                 ",{}]],"17":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"18":[["                                                                         ",{}]],"19":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"20":[[":                                                                        ",{}]],"21":[["        self.api_url = api_url                                           ",{}]],"22":[["        self.user_token = user_token                                     ",{}]],"23":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"24":[["        self.command = command                                           ",{}]],"25":[["        self.title = title                                               ",{}]],"26":[["        self.record_input = record_input                                 ",{}]],"27":[["        self.duration = None                                             ",{}]],"28":[["                                                                         ",{}]],"29":[["    def create(self):                                                    ",{}]],"30":[["        self._record()                                                   ",{}]],"31":[["        if self.confirm_upload():                                        ",{}]],"32":[["            return self._upload()                                        ",{}]],"33":[["        else:                                                            ",{}]],"34":[["            self._delete()                                               ",{}]],"35":[["                                                                         ",{}]],"36":[["    def confirm_upload(self):                                            ",{}]],"37":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]],"38":[["        answer = sys.stdin.readline().strip()                            ",{}]]}}],[0.040236,{"lines":{"0":[["import time                                                              ",{}]],"1":[["import json                                                              ",{}]],"2":[["import getopt                                                            ",{}]],"3":[["import subprocess                                                        ",{}]],"4":[["import httplib, urllib                                                   ",{}]],"5":[["import socket                                                            ",{}]],"6":[["import glob                                                              ",{}]],"7":[["import bz2                                                               ",{}]],"8":[["import ConfigParser                                                      ",{}]],"9":[["import uuid                                                              ",{}]],"10":[["import shutil                                                            ",{}]],"11":[["import StringIO                                                          ",{}]],"12":[["                                                                         ",{}]],"13":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"14":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"16":[["                                                                         ",{}]],"17":[["class AsciiCast(object):                                                 ",{}]],"18":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"19":[["                                                                         ",{}]],"20":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"21":[[":                                                                        ",{}]],"22":[["        self.api_url = api_url                                           ",{}]],"23":[["        self.user_token = user_token                                     ",{}]],"24":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"25":[["        self.command = command                                           ",{}]],"26":[["        self.title = title                                               ",{}]],"27":[["        self.record_input = record_input                                 ",{}]],"28":[["        self.duration = None                                             ",{}]],"29":[["                                                                         ",{}]],"30":[["    def create(self):                                                    ",{}]],"31":[["        self._record()                                                   ",{}]],"32":[["        if self.confirm_upload():                                        ",{}]],"33":[["            return self._upload()                                        ",{}]],"34":[["        else:                                                            ",{}]],"35":[["            self._delete()                                               ",{}]],"36":[["                                                                         ",{}]],"37":[["    def confirm_upload(self):                                            ",{}]],"38":[["        sys.stdout.write(\"~ Do you want to upload it? [Y/n] \")           ",{}]]}}],[0.039635,{"lines":{"0":[["import select                                                            ",{}]],"1":[["import time                                                              ",{}]],"2":[["import json                                                              ",{}]],"3":[["import getopt                                                            ",{}]],"4":[["import subprocess                                                        ",{}]],"5":[["import httplib, urllib                                                   ",{}]],"6":[["import socket                                                            ",{}]],"7":[["import glob                                                              ",{}]],"8":[["import bz2                                                               ",{}]],"9":[["import ConfigParser                                                      ",{}]],"10":[["import uuid                                                              ",{}]],"11":[["import shutil                                                            ",{}]],"12":[["import StringIO                                                          ",{}]],"13":[["                                                                         ",{}]],"14":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"15":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"17":[["                                                                         ",{}]],"18":[["class AsciiCast(object):                                                 ",{}]],"19":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"20":[["                                                                         ",{}]],"21":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"22":[[":                                                                        ",{}]],"23":[["        self.api_url = api_url                                           ",{}]],"24":[["        self.user_token = user_token                                     ",{}]],"25":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"26":[["        self.command = command                                           ",{}]],"27":[["        self.title = title                                               ",{}]],"28":[["        self.record_input = record_input                                 ",{}]],"29":[["        self.duration = None                                             ",{}]],"30":[["                                                                         ",{}]],"31":[["    def create(self):                                                    ",{}]],"32":[["        self._record()                                                   ",{}]],"33":[["        if self.confirm_upload():                                        ",{}]],"34":[["            return self._upload()                                        ",{}]],"35":[["        else:                                                            ",{}]],"36":[["            self._delete()                                               ",{}]],"37":[["                                                                         ",{}]],"38":[["    def confirm_upload(self):                                            ",{}]]}}],[0.040137,{"lines":{"0":[["import fcntl                                                             ",{}]],"1":[["import select                                                            ",{}]],"2":[["import time                                                              ",{}]],"3":[["import json                                                              ",{}]],"4":[["import getopt                                                            ",{}]],"5":[["import subprocess                                                        ",{}]],"6":[["import httplib, urllib                                                   ",{}]],"7":[["import socket                                                            ",{}]],"8":[["import glob                                                              ",{}]],"9":[["import bz2                                                               ",{}]],"10":[["import ConfigParser                                                      ",{}]],"11":[["import uuid                                                              ",{}]],"12":[["import shutil                                                            ",{}]],"13":[["import StringIO                                                          ",{}]],"14":[["                                                                         ",{}]],"15":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"16":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"18":[["                                                                         ",{}]],"19":[["class AsciiCast(object):                                                 ",{}]],"20":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"21":[["                                                                         ",{}]],"22":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"23":[[":                                                                        ",{}]],"24":[["        self.api_url = api_url                                           ",{}]],"25":[["        self.user_token = user_token                                     ",{}]],"26":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"27":[["        self.command = command                                           ",{}]],"28":[["        self.title = title                                               ",{}]],"29":[["        self.record_input = record_input                                 ",{}]],"30":[["        self.duration = None                                             ",{}]],"31":[["                                                                         ",{}]],"32":[["    def create(self):                                                    ",{}]],"33":[["        self._record()                                                   ",{}]],"34":[["        if self.confirm_upload():                                        ",{}]],"35":[["            return self._upload()                                        ",{}]],"36":[["        else:                                                            ",{}]],"37":[["            self._delete()                                               ",{}]],"38":[["                                                                         ",{}]]}}],[0.040108,{"lines":{"0":[["import termios                                                           ",{}]],"1":[["import fcntl                                                             ",{}]],"2":[["import select                                                            ",{}]],"3":[["import time                                                              ",{}]],"4":[["import json                                                              ",{}]],"5":[["import getopt                                                            ",{}]],"6":[["import subprocess                                                        ",{}]],"7":[["import httplib, urllib                                                   ",{}]],"8":[["import socket                                                            ",{}]],"9":[["import glob                                                              ",{}]],"10":[["import bz2                                                               ",{}]],"11":[["import ConfigParser                                                      ",{}]],"12":[["import uuid                                                              ",{}]],"13":[["import shutil                                                            ",{}]],"14":[["import StringIO                                                          ",{}]],"15":[["                                                                         ",{}]],"16":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"17":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"19":[["                                                                         ",{}]],"20":[["class AsciiCast(object):                                                 ",{}]],"21":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"22":[["                                                                         ",{}]],"23":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"24":[[":                                                                        ",{}]],"25":[["        self.api_url = api_url                                           ",{}]],"26":[["        self.user_token = user_token                                     ",{}]],"27":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"28":[["        self.command = command                                           ",{}]],"29":[["        self.title = title                                               ",{}]],"30":[["        self.record_input = record_input                                 ",{}]],"31":[["        self.duration = None                                             ",{}]],"32":[["                                                                         ",{}]],"33":[["    def create(self):                                                    ",{}]],"34":[["        self._record()                                                   ",{}]],"35":[["        if self.confirm_upload():                                        ",{}]],"36":[["            return self._upload()                                        ",{}]],"37":[["        else:                                                            ",{}]],"38":[["            self._delete()                                               ",{}]]}}],[0.039356,{"lines":{"0":[["import array                                                             ",{}]],"1":[["import termios                                                           ",{}]],"2":[["import fcntl                                                             ",{}]],"3":[["import select                                                            ",{}]],"4":[["import time                                                              ",{}]],"5":[["import json                                                              ",{}]],"6":[["import getopt                                                            ",{}]],"7":[["import subprocess                                                        ",{}]],"8":[["import httplib, urllib                                                   ",{}]],"9":[["import socket                                                            ",{}]],"10":[["import glob                                                              ",{}]],"11":[["import bz2                                                               ",{}]],"12":[["import ConfigParser                                                      ",{}]],"13":[["import uuid                                                              ",{}]],"14":[["import shutil                                                            ",{}]],"15":[["import StringIO                                                          ",{}]],"16":[["                                                                         ",{}]],"17":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"18":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"20":[["                                                                         ",{}]],"21":[["class AsciiCast(object):                                                 ",{}]],"22":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"23":[["                                                                         ",{}]],"24":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"25":[[":                                                                        ",{}]],"26":[["        self.api_url = api_url                                           ",{}]],"27":[["        self.user_token = user_token                                     ",{}]],"28":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"29":[["        self.command = command                                           ",{}]],"30":[["        self.title = title                                               ",{}]],"31":[["        self.record_input = record_input                                 ",{}]],"32":[["        self.duration = None                                             ",{}]],"33":[["                                                                         ",{}]],"34":[["    def create(self):                                                    ",{}]],"35":[["        self._record()                                                   ",{}]],"36":[["        if self.confirm_upload():                                        ",{}]],"37":[["            return self._upload()                                        ",{}]],"38":[["        else:                                                            ",{}]]}}],[0.040503,{"lines":{"0":[["import tty                                                               ",{}]],"1":[["import array                                                             ",{}]],"2":[["import termios                                                           ",{}]],"3":[["import fcntl                                                             ",{}]],"4":[["import select                                                            ",{}]],"5":[["import time                                                              ",{}]],"6":[["import json                                                              ",{}]],"7":[["import getopt                                                            ",{}]],"8":[["import subprocess                                                        ",{}]],"9":[["import httplib, urllib                                                   ",{}]],"10":[["import socket                                                            ",{}]],"11":[["import glob                                                              ",{}]],"12":[["import bz2                                                               ",{}]],"13":[["import ConfigParser                                                      ",{}]],"14":[["import uuid                                                              ",{}]],"15":[["import shutil                                                            ",{}]],"16":[["import StringIO                                                          ",{}]],"17":[["                                                                         ",{}]],"18":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"19":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"21":[["                                                                         ",{}]],"22":[["class AsciiCast(object):                                                 ",{}]],"23":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"24":[["                                                                         ",{}]],"25":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"26":[[":                                                                        ",{}]],"27":[["        self.api_url = api_url                                           ",{}]],"28":[["        self.user_token = user_token                                     ",{}]],"29":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"30":[["        self.command = command                                           ",{}]],"31":[["        self.title = title                                               ",{}]],"32":[["        self.record_input = record_input                                 ",{}]],"33":[["        self.duration = None                                             ",{}]],"34":[["                                                                         ",{}]],"35":[["    def create(self):                                                    ",{}]],"36":[["        self._record()                                                   ",{}]],"37":[["        if self.confirm_upload():                                        ",{}]],"38":[["            return self._upload()                                        ",{}]]}}],[0.039599,{"lines":{"0":[["import signal                                                            ",{}]],"1":[["import tty                                                               ",{}]],"2":[["import array                                                             ",{}]],"3":[["import termios                                                           ",{}]],"4":[["import fcntl                                                             ",{}]],"5":[["import select                                                            ",{}]],"6":[["import time                                                              ",{}]],"7":[["import json                                                              ",{}]],"8":[["import getopt                                                            ",{}]],"9":[["import subprocess                                                        ",{}]],"10":[["import httplib, urllib                                                   ",{}]],"11":[["import socket                                                            ",{}]],"12":[["import glob                                                              ",{}]],"13":[["import bz2                                                               ",{}]],"14":[["import ConfigParser                                                      ",{}]],"15":[["import uuid                                                              ",{}]],"16":[["import shutil                                                            ",{}]],"17":[["import StringIO                                                          ",{}]],"18":[["                                                                         ",{}]],"19":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"20":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"22":[["                                                                         ",{}]],"23":[["class AsciiCast(object):                                                 ",{}]],"24":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"25":[["                                                                         ",{}]],"26":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"27":[[":                                                                        ",{}]],"28":[["        self.api_url = api_url                                           ",{}]],"29":[["        self.user_token = user_token                                     ",{}]],"30":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"31":[["        self.command = command                                           ",{}]],"32":[["        self.title = title                                               ",{}]],"33":[["        self.record_input = record_input                                 ",{}]],"34":[["        self.duration = None                                             ",{}]],"35":[["                                                                         ",{}]],"36":[["    def create(self):                                                    ",{}]],"37":[["        self._record()                                                   ",{}]],"38":[["        if self.confirm_upload():                                        ",{}]]}}],[0.03988,{"lines":{"0":[["import pty                                                               ",{}]],"1":[["import signal                                                            ",{}]],"2":[["import tty                                                               ",{}]],"3":[["import array                                                             ",{}]],"4":[["import termios                                                           ",{}]],"5":[["import fcntl                                                             ",{}]],"6":[["import select                                                            ",{}]],"7":[["import time                                                              ",{}]],"8":[["import json                                                              ",{}]],"9":[["import getopt                                                            ",{}]],"10":[["import subprocess                                                        ",{}]],"11":[["import httplib, urllib                                                   ",{}]],"12":[["import socket                                                            ",{}]],"13":[["import glob                                                              ",{}]],"14":[["import bz2                                                               ",{}]],"15":[["import ConfigParser                                                      ",{}]],"16":[["import uuid                                                              ",{}]],"17":[["import shutil                                                            ",{}]],"18":[["import StringIO                                                          ",{}]],"19":[["                                                                         ",{}]],"20":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"21":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"23":[["                                                                         ",{}]],"24":[["class AsciiCast(object):                                                 ",{}]],"25":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"26":[["                                                                         ",{}]],"27":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"28":[[":                                                                        ",{}]],"29":[["        self.api_url = api_url                                           ",{}]],"30":[["        self.user_token = user_token                                     ",{}]],"31":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"32":[["        self.command = command                                           ",{}]],"33":[["        self.title = title                                               ",{}]],"34":[["        self.record_input = record_input                                 ",{}]],"35":[["        self.duration = None                                             ",{}]],"36":[["                                                                         ",{}]],"37":[["    def create(self):                                                    ",{}]],"38":[["        self._record()                                                   ",{}]]}}],[0.040357,{"lines":{"0":[["import os                                                                ",{}]],"1":[["import pty                                                               ",{}]],"2":[["import signal                                                            ",{}]],"3":[["import tty                                                               ",{}]],"4":[["import array                                                             ",{}]],"5":[["import termios                                                           ",{}]],"6":[["import fcntl                                                             ",{}]],"7":[["import select                                                            ",{}]],"8":[["import time                                                              ",{}]],"9":[["import json                                                              ",{}]],"10":[["import getopt                                                            ",{}]],"11":[["import subprocess                                                        ",{}]],"12":[["import httplib, urllib                                                   ",{}]],"13":[["import socket                                                            ",{}]],"14":[["import glob                                                              ",{}]],"15":[["import bz2                                                               ",{}]],"16":[["import ConfigParser                                                      ",{}]],"17":[["import uuid                                                              ",{}]],"18":[["import shutil                                                            ",{}]],"19":[["import StringIO                                                          ",{}]],"20":[["                                                                         ",{}]],"21":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"22":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"24":[["                                                                         ",{}]],"25":[["class AsciiCast(object):                                                 ",{}]],"26":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"27":[["                                                                         ",{}]],"28":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"29":[[":                                                                        ",{}]],"30":[["        self.api_url = api_url                                           ",{}]],"31":[["        self.user_token = user_token                                     ",{}]],"32":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"33":[["        self.command = command                                           ",{}]],"34":[["        self.title = title                                               ",{}]],"35":[["        self.record_input = record_input                                 ",{}]],"36":[["        self.duration = None                                             ",{}]],"37":[["                                                                         ",{}]],"38":[["    def create(self):                                                    ",{}]]}}],[0.040892,{"lines":{"0":[["import sys                                                               ",{}]],"1":[["import os                                                                ",{}]],"2":[["import pty                                                               ",{}]],"3":[["import signal                                                            ",{}]],"4":[["import tty                                                               ",{}]],"5":[["import array                                                             ",{}]],"6":[["import termios                                                           ",{}]],"7":[["import fcntl                                                             ",{}]],"8":[["import select                                                            ",{}]],"9":[["import time                                                              ",{}]],"10":[["import json                                                              ",{}]],"11":[["import getopt                                                            ",{}]],"12":[["import subprocess                                                        ",{}]],"13":[["import httplib, urllib                                                   ",{}]],"14":[["import socket                                                            ",{}]],"15":[["import glob                                                              ",{}]],"16":[["import bz2                                                               ",{}]],"17":[["import ConfigParser                                                      ",{}]],"18":[["import uuid                                                              ",{}]],"19":[["import shutil                                                            ",{}]],"20":[["import StringIO                                                          ",{}]],"21":[["                                                                         ",{}]],"22":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"23":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"25":[["                                                                         ",{}]],"26":[["class AsciiCast(object):                                                 ",{}]],"27":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"28":[["                                                                         ",{}]],"29":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"30":[[":                                                                        ",{}]],"31":[["        self.api_url = api_url                                           ",{}]],"32":[["        self.user_token = user_token                                     ",{}]],"33":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"34":[["        self.command = command                                           ",{}]],"35":[["        self.title = title                                               ",{}]],"36":[["        self.record_input = record_input                                 ",{}]],"37":[["        self.duration = None                                             ",{}]],"38":[["                                                                         ",{}]]}}],[0.040922,{"lines":{"0":[["                                                                         ",{}]],"1":[["import sys                                                               ",{}]],"2":[["import os                                                                ",{}]],"3":[["import pty                                                               ",{}]],"4":[["import signal                                                            ",{}]],"5":[["import tty                                                               ",{}]],"6":[["import array                                                             ",{}]],"7":[["import termios                                                           ",{}]],"8":[["import fcntl                                                             ",{}]],"9":[["import select                                                            ",{}]],"10":[["import time                                                              ",{}]],"11":[["import json                                                              ",{}]],"12":[["import getopt                                                            ",{}]],"13":[["import subprocess                                                        ",{}]],"14":[["import httplib, urllib                                                   ",{}]],"15":[["import socket                                                            ",{}]],"16":[["import glob                                                              ",{}]],"17":[["import bz2                                                               ",{}]],"18":[["import ConfigParser                                                      ",{}]],"19":[["import uuid                                                              ",{}]],"20":[["import shutil                                                            ",{}]],"21":[["import StringIO                                                          ",{}]],"22":[["                                                                         ",{}]],"23":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"24":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"26":[["                                                                         ",{}]],"27":[["class AsciiCast(object):                                                 ",{}]],"28":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"29":[["                                                                         ",{}]],"30":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"31":[[":                                                                        ",{}]],"32":[["        self.api_url = api_url                                           ",{}]],"33":[["        self.user_token = user_token                                     ",{}]],"34":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"35":[["        self.command = command                                           ",{}]],"36":[["        self.title = title                                               ",{}]],"37":[["        self.record_input = record_input                                 ",{}]],"38":[["        self.duration = None                                             ",{}]]},"cursor":{"x":0}}],[0.040994,{"lines":{"0":[["#!/usr/bin/env python2                                                   ",{}]],"1":[["                                                                         ",{}]],"2":[["import sys                                                               ",{}]],"3":[["import os                                                                ",{}]],"4":[["import pty                                                               ",{}]],"5":[["import signal                                                            ",{}]],"6":[["import tty                                                               ",{}]],"7":[["import array                                                             ",{}]],"8":[["import termios                                                           ",{}]],"9":[["import fcntl                                                             ",{}]],"10":[["import select                                                            ",{}]],"11":[["import time                                                              ",{}]],"12":[["import json                                                              ",{}]],"13":[["import getopt                                                            ",{}]],"14":[["import subprocess                                                        ",{}]],"15":[["import httplib, urllib                                                   ",{}]],"16":[["import socket                                                            ",{}]],"17":[["import glob                                                              ",{}]],"18":[["import bz2                                                               ",{}]],"19":[["import ConfigParser                                                      ",{}]],"20":[["import uuid                                                              ",{}]],"21":[["import shutil                                                            ",{}]],"22":[["import StringIO                                                          ",{}]],"23":[["                                                                         ",{}]],"24":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"25":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"27":[["                                                                         ",{}]],"28":[["class AsciiCast(object):                                                 ",{}]],"29":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"30":[["                                                                         ",{}]],"31":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"32":[[":                                                                        ",{}]],"33":[["        self.api_url = api_url                                           ",{}]],"34":[["        self.user_token = user_token                                     ",{}]],"35":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"36":[["        self.command = command                                           ",{}]],"37":[["        self.title = title                                               ",{}]],"38":[["        self.record_input = record_input                                 ",{}]]},"cursor":{"x":8}}],[0.140076,{}],[0.100105,{}],[0.100153,{}],[0.100149,{}],[0.100164,{}],[0.100148,{}],[0.100077,{}],[0.100132,{}],[0.100121,{}],[0.085919,{"cursor":{"x":9}}],[0.660314,{"cursor":{"x":10}}],[0.040153,{"cursor":{"x":11}}],[0.039938,{"cursor":{"x":12}}],[0.039462,{"cursor":{"x":13}}],[0.040953,{"cursor":{"x":14}}],[0.0409,{"cursor":{"x":15}}],[0.040913,{"cursor":{"x":16}}],[0.040706,{"cursor":{"x":17}}],[0.039835,{"cursor":{"x":18}}],[0.04049,{"cursor":{"x":19}}],[0.03972,{"cursor":{"x":20}}],[0.04045,{"cursor":{"x":21}}],[0.286496,{}],[2.030643,{"lines":{"0":[["C                                                                        ",{}]],"1":[["#!/usr/bin/env python2                                                   ",{}]],"2":[["                                                                         ",{}]],"3":[["import sys                                                               ",{}]],"4":[["import os                                                                ",{}]],"5":[["import pty                                                               ",{}]],"6":[["import signal                                                            ",{}]],"7":[["import tty                                                               ",{}]],"8":[["import array                                                             ",{}]],"9":[["import termios                                                           ",{}]],"10":[["import fcntl                                                             ",{}]],"11":[["import select                                                            ",{}]],"12":[["import time                                                              ",{}]],"13":[["import json                                                              ",{}]],"14":[["import getopt                                                            ",{}]],"15":[["import subprocess                                                        ",{}]],"16":[["import httplib, urllib                                                   ",{}]],"17":[["import socket                                                            ",{}]],"18":[["import glob                                                              ",{}]],"19":[["import bz2                                                               ",{}]],"20":[["import ConfigParser                                                      ",{}]],"21":[["import uuid                                                              ",{}]],"22":[["import shutil                                                            ",{}]],"23":[["import StringIO                                                          ",{}]],"24":[["                                                                         ",{}]],"25":[["SCRIPT_NAME = os.path.basename(sys.argv[0])                              ",{}]],"26":[["BASE_DIR = os.path.expanduser(\"~/.ascii.io\")                             ",{}]],"28":[["                                                                         ",{}]],"29":[["class AsciiCast(object):                                                 ",{}]],"30":[["    QUEUE_DIR = BASE_DIR + \"/queue\"                                      ",{}]],"31":[["                                                                         ",{}]],"32":[["    def __init__(self, api_url, user_token, command, title, record_input)",{}]],"33":[[":                                                                        ",{}]],"34":[["        self.api_url = api_url                                           ",{}]],"35":[["        self.user_token = user_token                                     ",{}]],"36":[["        self.path = AsciiCast.QUEUE_DIR + \"/%i\" % int(time.time())       ",{}]],"37":[["        self.command = command                                           ",{}]],"38":[["        self.title = title                                               ",{}]]},"cursor":{"x":1}}],[2.055634,{"cursor":{"x":0}}],[0.687493,{"lines":{"39":[[":                                                                        ",{}]]},"cursor":{"x":1,"y":39}}],[0.654186,{"lines":{"39":[[":q                                                                       ",{}]]},"cursor":{"x":2}}],[0.57075,{"lines":{"39":[[":q!                                                                      ",{}]]},"cursor":{"x":3}}],[0.35133,{"lines":{"0":[["                                                                         ",{}]],"1":[["               .                ",{"fg":7,"bold":true}],["                                         ",{}]],"2":[["               #.               OS:",{"fg":7,"bold":true}],[" Archbang x86_64                      ",{}]],"3":[["              /;#               Hostname:",{"fg":7,"bold":true}],[" archbang                       ",{}]],"4":[["              #;##              Kernel:",{"fg":7,"bold":true}],[" 3.4.6-1-ARCH                     ",{}]],"5":[["             /###'              Uptime:",{"fg":7,"bold":true}],[" 4:35                             ",{}]],"6":[["            ;#\\   #;            Window Manager:",{"fg":7,"bold":true}],[" xmonad                   ",{}]],"7":[["           +###  .##            Packages:",{"fg":7,"bold":true}],[" 772                            ",{}]],"8":[["          +####  ;###           RAM:",{"fg":7,"bold":true}],[" 2433 MB / 3892 MB                   ",{}]],"9":[["         ######  #####;         CPU:",{"fg":7,"bold":true}],[" Intel(R) Core(TM)2 Duo CPU T6600 @ 2",{}]],"10":[[".20GHz                                                                   ",{}]],"11":[["        #######  ######         Shell:",{"fg":7,"bold":true}],[" Bash                              ",{}]],"12":[["       ######## ########        Root FS:",{"fg":7,"bold":true}],[" 6.7G / 20G (ext4)               ",{}]],"13":[["     .########;;########\\        ",{"fg":7,"bold":true}],["                                        ",{}]],"14":[["    .########;   ;#######       ",{"fg":7,"bold":true}],["                                         ",{}]],"15":[["    #########.   .########`     ",{"fg":7,"bold":true}],["                                         ",{}]],"16":[["   ######'           '######    ",{"fg":7,"bold":true}],["                                         ",{}]],"17":[["  ;####                 ####;   ",{"fg":7,"bold":true}],["                                         ",{}]],"18":[["  ##'                     '##   ",{"fg":7,"bold":true}],["                                         ",{}]],"19":[[" #'                         `#  ",{"fg":7,"bold":true}],["                                         ",{}]],"20":[["                                                                         ",{}]],"21":[["[sakekasi@archbang bin]$ ls                                              ",{}]],"22":[["asciiio",{"fg":2,"bold":true}],["  ",{}],["asciiio~",{"fg":2,"bold":true}],["                                                        ",{}]],"23":[["[sakekasi@archbang bin]$ cd                                              ",{}]],"24":[["[sakekasi@archbang ~]$ ls                                                ",{}]],"25":[["Desktop",{"fg":4,"bold":true}],["    ",{}],["Downloads",{"fg":4,"bold":true}],["  ",{}],["Pictures",{"fg":4,"bold":true}],["  ",{}],["Programming",{"fg":4,"bold":true}],["                              ",{}]],"26":[["Documents",{"fg":4,"bold":true}],["  ",{}],["Dropbox",{"fg":4,"bold":true}],["    pkglist   ",{}],["Source",{"fg":4,"bold":true}],["                                   ",{}]],"27":[["[sakekasi@archbang ~]$ cd /usr/local/bin                                 ",{}]],"28":[["[sakekasi@archbang bin]$ vi asciiio                                      ",{}]],"29":[["[sakekasi@archbang bin]$                                                 ",{}]],"30":[["                                                                         ",{}]],"32":[["                                                                         ",{}]],"33":[["                                                                         ",{}]],"34":[["                                                                         ",{}]],"35":[["                                                                         ",{}]],"36":[["                                                                         ",{}]],"37":[["                                                                         ",{}]],"38":[["                                                                         ",{}]],"39":[["                                                                         ",{}]]},"cursor":{"x":25,"y":29}}],[1.921901,{"lines":{"29":[["[sakekasi@archbang bin]$ e                                               ",{}]]},"cursor":{"x":26}}],[0.212419,{"lines":{"29":[["[sakekasi@archbang bin]$ ex                                              ",{}]]},"cursor":{"x":27}}],[0.108094,{"lines":{"29":[["[sakekasi@archbang bin]$ exi                                             ",{}]]},"cursor":{"x":28}}],[0.147824,{"lines":{"29":[["[sakekasi@archbang bin]$ exit                                            ",{}]]},"cursor":{"x":29}}],[0.104101,{"lines":{"30":[["exit                                                                     ",{}]]},"cursor":{"x":0,"y":31}}]]