{"ID":701,"Author":{"Name":"tolland","ID":0,"FullName":"","Gravatar":"5aad0bbc993dc5e201cced5e8cc26895"},"Title":"Demo of bootstrapping AWS instances to Hosted Chef","Description":"\u003cdiv class=\"content\"\u003e\u003cp\u003eWARNING: please set the browser zoom to 100% to view the screen cast correctly. I found chrome at 100% gives the best viewing experience.\u003c/p\u003e\n\n\u003cp\u003e# demo bootstrapping AWS instances for Hosted chef.\u003c/p\u003e\n\n\u003cp\u003e# prerequisites are \u003c/p\u003e\n\n\u003cp\u003e# 1. chef workstation configured with chef-validator key for hosted chef account\u003c/p\u003e\n\n\u003cp\u003e# to test, show that \u0026#34;knife\u0026#34; can connect to the chef server\u003c/p\u003e\n\n\u003cp\u003eknife status\u003c/p\u003e\n\n\u003cp\u003e# 2. euca2ools configured for aws account control\u003c/p\u003e\n\n\u003cp\u003e# euca2ools are AWS compatible command line tools from the Eucalyptus project.\u003c/p\u003e\n\n\u003cp\u003erpm -qa | grep euca2ools\u003c/p\u003e\n\n\u003cp\u003e# to test show that euca2ools can query AWS endpoint.\u003c/p\u003e\n\n\u003cp\u003eeuca-version \u003c/p\u003e\n\n\u003cp\u003eeuca-describe-availability-zones \u003c/p\u003e\n\n\u003cp\u003e# 3. local ssh configured with the AWS keypair private key in ssh-agent\u003c/p\u003e\n\n\u003cp\u003essh-add  ~/.ssh/my-amazon-private-key.pvt\u003c/p\u003e\n\n\u003cp\u003e# Amazon provide an Amazon Linux image with id ami-aecd60c7\u003c/p\u003e\n\n\u003cp\u003e# The Amazon Linux AMI 2012.03 is an EBS-backed, PV-GRUB image. It includes Linux 3.2, AWS tools, and repository access to multiple versions of MySQL, PostgreSQL, Python, Ruby, and Tomcat.\u003c/p\u003e\n\n\u003cp\u003eeuca-describe-images ami-aecd60c7\u003c/p\u003e\n\n\u003cp\u003e# start some instances of this image type in thef default security group\u003c/p\u003e\n\n\u003cp\u003eecho /usr/bin/euca-run-instances  -n5  --group default --key aws-keypair001 --debug \u0026#34;ami-aecd60c7\u0026#34; -t m1.small\u003c/p\u003e\n\n\u003cp\u003e# wait some time...\u003c/p\u003e\n\n\u003cp\u003e# show the running instances\u003c/p\u003e\n\n\u003cp\u003eeuca-describe-instances |  grep INSTANCE |egrep -v \u0026#34;(termin|shuttin)\u0026#34; | cut -f2,5,6\u003c/p\u003e\n\n\u003cp\u003e# confirm these instances are accessible\u003c/p\u003e\n\n\u003cp\u003efor foo in $(euca-describe-instances | grep running | egrep \u0026#34;^INSTANCE\u0026#34; | cut -f4);  do ssh -l ec2-user $foo date; done\u003c/p\u003e\n\n\u003cp\u003e# boot strap the instances to the chef hosted account\u003c/p\u003e\n\n\u003cp\u003eeuca-describe-instances  | grep INSTA | egrep \u0026#34;(running)\u0026#34;  | cut -f4 | xargs -L1 -I{}  knife bootstrap -x ec2-user {} --sudo\u003c/p\u003e\n\n\u003cp\u003e# show the instances in the chef hosted system.\u003c/p\u003e\n\n\u003cp\u003eknife status\u003c/p\u003e\n\u003c/div\u003e","Time":"2012-08-06T08:57:19Z","Tags":["Linux","bash","xterm"]}